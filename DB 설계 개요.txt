DB ERD 설계 구성

통일성을 위해 영어 뜻이 조금 달라도 이해 부탁드려요!
date, year, user <= 예약어인데 모르고 컬럼명으로 사용했어요.. 컬럼명으로 이용할 때는 "date", "year"처럼 사용해주시면 감사하겠습니다..
------------------------------------------------

사용자(User)
identification -> PK
password -> not null
nickname(이름 및 테이블에 표기되는 닉네임) -> not null, UK
phone -> not null
email -> not null
address

// 이용약관은 html에 박아놓는 걸로..

------------------------------------------------

메인_학사안내(Main_acadAffairs)
id -> PK (테이블에는 표기안됨), AUTO INCREMENT
identification -> not null, FK
title -> not null
date -> not null

메인_공지사항(Main_notice)
id -> PK (테이블에는 표기안됨), AUTO INCREMENT
identification -> not null, FK
title -> not null
date -> not null

------------------------------------------------

입학안내_공지사항(Adm_notice)
id -> PK, AUTO INCREMENT
title -> not null
nickname -> not null, FK
date -> not null
hits -> default 0

입학안내_입학상담(Adm_counsel)
id -> PK, AUTO INCREMENT
classify -> not null
title -> not null
nickname -> not null, FK
date -> not null
condition -> not null

------------------------------------------------

대학,대학원(College)
major(전공) -> PK
dean(학과장) -> not null
phone -> not null
note(비고)

------------------------------------------------

학사안내_공지사항(AA_notice)
id -> PK, AUTO INCREMENT
title -> not null
nickname -> not null, FK
date -> not null
hits -> default 0

학사안내_학사일정(AA_schedules)
id -> PK AUTO INCREMENT(테이블 표시 x)
content -> not null
nickname -> not null, FK

학사안내_자주묻는질문(AA_FAQ) -> AcademicAffairs_FAQ 축약
id(식별번호, 테이블에 표기 x) - PK ->>> 식별번호 1이면 휴,복학 관련 / 식별번호 2면 교과 및 학사 관련 / 식별번호 3이면 수강신청 관련
question(Q, 질문) - not null
answer(A, 답변) - not null           ->>> 질문 란을 누르면 답변이 나오는 방식으로 되는 듯

------------------------------------------------

대학생활_식단안내(CL_menuGuide)
date(날짜) - PK
price(가격) - not null -> 일부러 NVARCHAR사용. ex) 5,500원으로 사용하기 위함
rice(밥)
soup(국)
side1(반찬1)
side2(반찬2)
side3(반찬3)
side4(반찬4)

대학생활_갤러리(CL_gallery)
imageRoute(이미지경로) - PK
title(제목) - not null
hits(조회수) - default 0
where(위치) - not null
regDate(등록일) - not null
------------------------------------------------

커뮤니티_공지사항(Commu_anno)
id -> PK, AUTO INCREMENT
title -> not null
nickname -> not null, FK
date -> not null
hits -> default 0

커뮤니티_뉴스 및 칼럼(Commu_news)
id -> PK, AUTO INCREMENT
classify -> not null
title -> not null
nickname -> not null, FK
date -> not null
hits -> default 0

커뮤니티_취업정보(Commu_emp) -> 파일명은 Community_employmentInformation(30자 이상이어서 줄임)
id(번호) -> PK, AUTO INCREMENT
condition(상태) -> not null
nickname(업체) -> not null, FK
title(채용정보) -> not null
date(마감일) -> not null
hits(조회) -> default 0

커뮤니티_자유게시판(Commu_free)
id -> PK, AUTO INCREMENT
title -> not null
nickname -> not null, FK
date -> not null
hits -> default 0

커뮤니티_질문과 답변(Commu_QnA)
id -> PK, AUTO INCREMENT
title -> not null
nickname -> not null, FK
date -> not null
condition -> not null

커뮤니티_자료실(Commu_refer)
id -> PK, AUTO INCREMENT
title -> not null
nickname -> not null, FK
date -> not null
hits -> default 0

------------------------------------------------
//////////현재 필요없는 테이블 시작/////////
학생지원_수강신청(SA_reg) -> StudentAssistance_courseRegistration 축약 // 로그인된 학생의 학과와 학과 테이블과 비교 후 테이블 출력 / 신청 버튼 누를 때 session의 학번을 넘겨야 해요. 그래서 SA_details 테이블에 INSERT로 넘겨야 해요.
major(개설학과) -> PK, FK(복합 기본키) - curriculum / FK - lecture (학과 속성)
code(코드) -> PK, FK(복합 기본키) - curriculum / FK - lecture
classify(구분) -> not null, UK(복합 UK) / FK - lecture
year(학년) -> not null, FK - curriculum / FK - lecture
subject(과목명) -> not null, FK - curriculum / FK - lecture
grade(학점) -> not null, FK - curriculum / FK - lecture
professor(담당교수) -> not null, UK(복합 UK) / FK - lecture
numOfPeople(수강인원) -> not null / FK - lecture(현재까지 추가한 인원/최대 수강인원 - lecture)
note(비고)
//////////현재 필요없는 테이블 끝/////////

학생지원_수강신청내역(SA_details) ->StudentAssistance_courceRegistrationDetails 축약 // 학생지원_수강신청(SA_reg)에서 받은 학번을 현재 내 session의 학번과 비교해서 보여줘야하는데, 수업 시작의 yyyy부분과 개설학기를 선택 후 lecture의 수업 시작 yyyy과 개설학기를 조건절(on)으로 해서  join해서 리스트를 뽑는다.
(학생학번) - PK, FK - lecture / 조건절로 들어감
(수업 기간 - 수업 시작의 yyyy부분을 뽑아옴) - FK - lecture / 조건절로 들어감
(개설학년 - 개설학기) - FK - lecture / 조건절로 들어감
code(교과목코드) -> PK, FK - curriculum / FK - lecture의 과목코드로 join해서 수업 시작, 개설학기 뽑음
subject(과목명) -> FK - curriculum / FK - lecture
year(대상학년) -> FK - curriculum / FK - lecture
professor(담당교수) -> FK - registration / FK - lecture
grade(학점) -> FK - curriculum / FK - lecture
classify(이수구분) -> FK - registration / FK - lecture
time(강의시간) - FK -lecture(수업 요일 / 시작, 종료 필요)
where(강의장) - FK - lecture

학생지원_교과과정(SA_curriculum) // 로그인된 학생의 입학학과 = 개설학과를 통해 미리 만들어진 교과과정만 출력// 교과과정은 강의 등록과 연동되지 않게 했음. 이유 : 교과과정은 잘 바뀌지 않기 때문.
(입학학과) -> PK, FK(테이블에 보여주지는 x)
code(코드번호) -> PK, UK(복합 UK)
year(학년) -> not null, UK(복합 UK)
complectionDivision(이수구분) -> not null
subject(교과목명) -> not null, (복합 UK)
grade(학점) -> not null, (복합 UK)


학생지원_성적조회(SA_grade)
code(교과목코드) -> PK, FK - details
subject(과목명) -> FK - details
year(대상학년) -> FK - details
professor(담당교수) -> FK - details
classify(이수구분) -> FK - details
score(점수)
// 등급은 score(점수로) 산출
grade(취득학점) -> FK - details
// 취득학점은 F일 시 0으로 산출

------------------------------------------------